# -*- coding: utf-8 -*-

"""
pagarmeapisdk

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from pagarmeapisdk.api_helper import APIHelper


class GetPhoneNumberResponse(object):

    """Implementation of the 'GetPhoneNumberResponse' model.

    Response object for getting an PhoneNumberResponse

    Attributes:
        ddd (str): TODO: type description here.
        number (str): TODO: type description here.
        mtype (str): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "ddd": 'ddd',
        "number": 'number',
        "mtype": 'type'
    }

    _optionals = [
        'ddd',
        'number',
        'mtype',
    ]

    _nullables = [
        'ddd',
        'number',
        'mtype',
    ]

    def __init__(self,
                 ddd=APIHelper.SKIP,
                 number=APIHelper.SKIP,
                 mtype=APIHelper.SKIP):
        """Constructor for the GetPhoneNumberResponse class"""

        # Initialize members of the class
        if ddd is not APIHelper.SKIP:
            self.ddd = ddd 
        if number is not APIHelper.SKIP:
            self.number = number 
        if mtype is not APIHelper.SKIP:
            self.mtype = mtype 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        ddd = dictionary.get("ddd") if "ddd" in dictionary.keys() else APIHelper.SKIP
        number = dictionary.get("number") if "number" in dictionary.keys() else APIHelper.SKIP
        mtype = dictionary.get("type") if "type" in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(ddd,
                   number,
                   mtype)
