# -*- coding: utf-8 -*-

"""
pagarmeapisdk

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from pagarmeapisdk.api_helper import APIHelper


class GetTransferSettingsResponse(object):

    """Implementation of the 'GetTransferSettingsResponse' model.

    TODO: type model description here.

    Attributes:
        transfer_enabled (bool): TODO: type description here.
        transfer_interval (str): TODO: type description here.
        transfer_day (int): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "transfer_enabled": 'transfer_enabled',
        "transfer_interval": 'transfer_interval',
        "transfer_day": 'transfer_day'
    }

    _optionals = [
        'transfer_enabled',
        'transfer_interval',
        'transfer_day',
    ]

    _nullables = [
        'transfer_enabled',
        'transfer_interval',
        'transfer_day',
    ]

    def __init__(self,
                 transfer_enabled=APIHelper.SKIP,
                 transfer_interval=APIHelper.SKIP,
                 transfer_day=APIHelper.SKIP):
        """Constructor for the GetTransferSettingsResponse class"""

        # Initialize members of the class
        if transfer_enabled is not APIHelper.SKIP:
            self.transfer_enabled = transfer_enabled 
        if transfer_interval is not APIHelper.SKIP:
            self.transfer_interval = transfer_interval 
        if transfer_day is not APIHelper.SKIP:
            self.transfer_day = transfer_day 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        transfer_enabled = dictionary.get("transfer_enabled") if "transfer_enabled" in dictionary.keys() else APIHelper.SKIP
        transfer_interval = dictionary.get("transfer_interval") if "transfer_interval" in dictionary.keys() else APIHelper.SKIP
        transfer_day = dictionary.get("transfer_day") if "transfer_day" in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(transfer_enabled,
                   transfer_interval,
                   transfer_day)
