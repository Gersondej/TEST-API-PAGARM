# -*- coding: utf-8 -*-

"""
pagarmeapisdk

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from pagarmeapisdk.api_helper import APIHelper


class GetBillingAddressResponse(object):

    """Implementation of the 'GetBillingAddressResponse' model.

    Response object for getting a billing address

    Attributes:
        street (string): TODO: type description here.
        number (string): TODO: type description here.
        zip_code (string): TODO: type description here.
        neighborhood (string): TODO: type description here.
        city (string): TODO: type description here.
        state (string): TODO: type description here.
        country (string): TODO: type description here.
        complement (string): TODO: type description here.
        line_1 (string): Line 1 for address
        line_2 (string): Line 2 for address

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "street": 'street',
        "number": 'number',
        "zip_code": 'zip_code',
        "neighborhood": 'neighborhood',
        "city": 'city',
        "state": 'state',
        "country": 'country',
        "complement": 'complement',
        "line_1": 'line_1',
        "line_2": 'line_2'
    }

    _optionals = [
        'street',
        'number',
        'zip_code',
        'neighborhood',
        'city',
        'state',
        'country',
        'complement',
        'line_1',
        'line_2',
    ]

    _nullables = [
        'street',
        'number',
        'zip_code',
        'neighborhood',
        'city',
        'state',
        'country',
        'complement',
        'line_1',
        'line_2',
    ]

    def __init__(self,
                 street=APIHelper.SKIP,
                 number=APIHelper.SKIP,
                 zip_code=APIHelper.SKIP,
                 neighborhood=APIHelper.SKIP,
                 city=APIHelper.SKIP,
                 state=APIHelper.SKIP,
                 country=APIHelper.SKIP,
                 complement=APIHelper.SKIP,
                 line_1=APIHelper.SKIP,
                 line_2=APIHelper.SKIP):
        """Constructor for the GetBillingAddressResponse class"""

        # Initialize members of the class
        if street is not APIHelper.SKIP:
            self.street = street 
        if number is not APIHelper.SKIP:
            self.number = number 
        if zip_code is not APIHelper.SKIP:
            self.zip_code = zip_code 
        if neighborhood is not APIHelper.SKIP:
            self.neighborhood = neighborhood 
        if city is not APIHelper.SKIP:
            self.city = city 
        if state is not APIHelper.SKIP:
            self.state = state 
        if country is not APIHelper.SKIP:
            self.country = country 
        if complement is not APIHelper.SKIP:
            self.complement = complement 
        if line_1 is not APIHelper.SKIP:
            self.line_1 = line_1 
        if line_2 is not APIHelper.SKIP:
            self.line_2 = line_2 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        street = dictionary.get("street") if "street" in dictionary.keys() else APIHelper.SKIP
        number = dictionary.get("number") if "number" in dictionary.keys() else APIHelper.SKIP
        zip_code = dictionary.get("zip_code") if "zip_code" in dictionary.keys() else APIHelper.SKIP
        neighborhood = dictionary.get("neighborhood") if "neighborhood" in dictionary.keys() else APIHelper.SKIP
        city = dictionary.get("city") if "city" in dictionary.keys() else APIHelper.SKIP
        state = dictionary.get("state") if "state" in dictionary.keys() else APIHelper.SKIP
        country = dictionary.get("country") if "country" in dictionary.keys() else APIHelper.SKIP
        complement = dictionary.get("complement") if "complement" in dictionary.keys() else APIHelper.SKIP
        line_1 = dictionary.get("line_1") if "line_1" in dictionary.keys() else APIHelper.SKIP
        line_2 = dictionary.get("line_2") if "line_2" in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(street,
                   number,
                   zip_code,
                   neighborhood,
                   city,
                   state,
                   country,
                   complement,
                   line_1,
                   line_2)
