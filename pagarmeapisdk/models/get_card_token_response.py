# -*- coding: utf-8 -*-

"""
pagarmeapisdk

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from pagarmeapisdk.api_helper import APIHelper


class GetCardTokenResponse(object):

    """Implementation of the 'GetCardTokenResponse' model.

    Card token data

    Attributes:
        last_four_digits (string): TODO: type description here.
        holder_name (string): TODO: type description here.
        holder_document (string): TODO: type description here.
        exp_month (string): TODO: type description here.
        exp_year (string): TODO: type description here.
        brand (string): TODO: type description here.
        mtype (string): TODO: type description here.
        label (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "last_four_digits": 'last_four_digits',
        "holder_name": 'holder_name',
        "holder_document": 'holder_document',
        "exp_month": 'exp_month',
        "exp_year": 'exp_year',
        "brand": 'brand',
        "mtype": 'type',
        "label": 'label'
    }

    _optionals = [
        'last_four_digits',
        'holder_name',
        'holder_document',
        'exp_month',
        'exp_year',
        'brand',
        'mtype',
        'label',
    ]

    _nullables = [
        'last_four_digits',
        'holder_name',
        'holder_document',
        'exp_month',
        'exp_year',
        'brand',
        'mtype',
        'label',
    ]

    def __init__(self,
                 last_four_digits=APIHelper.SKIP,
                 holder_name=APIHelper.SKIP,
                 holder_document=APIHelper.SKIP,
                 exp_month=APIHelper.SKIP,
                 exp_year=APIHelper.SKIP,
                 brand=APIHelper.SKIP,
                 mtype=APIHelper.SKIP,
                 label=APIHelper.SKIP):
        """Constructor for the GetCardTokenResponse class"""

        # Initialize members of the class
        if last_four_digits is not APIHelper.SKIP:
            self.last_four_digits = last_four_digits 
        if holder_name is not APIHelper.SKIP:
            self.holder_name = holder_name 
        if holder_document is not APIHelper.SKIP:
            self.holder_document = holder_document 
        if exp_month is not APIHelper.SKIP:
            self.exp_month = exp_month 
        if exp_year is not APIHelper.SKIP:
            self.exp_year = exp_year 
        if brand is not APIHelper.SKIP:
            self.brand = brand 
        if mtype is not APIHelper.SKIP:
            self.mtype = mtype 
        if label is not APIHelper.SKIP:
            self.label = label 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        last_four_digits = dictionary.get("last_four_digits") if "last_four_digits" in dictionary.keys() else APIHelper.SKIP
        holder_name = dictionary.get("holder_name") if "holder_name" in dictionary.keys() else APIHelper.SKIP
        holder_document = dictionary.get("holder_document") if "holder_document" in dictionary.keys() else APIHelper.SKIP
        exp_month = dictionary.get("exp_month") if "exp_month" in dictionary.keys() else APIHelper.SKIP
        exp_year = dictionary.get("exp_year") if "exp_year" in dictionary.keys() else APIHelper.SKIP
        brand = dictionary.get("brand") if "brand" in dictionary.keys() else APIHelper.SKIP
        mtype = dictionary.get("type") if "type" in dictionary.keys() else APIHelper.SKIP
        label = dictionary.get("label") if "label" in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(last_four_digits,
                   holder_name,
                   holder_document,
                   exp_month,
                   exp_year,
                   brand,
                   mtype,
                   label)
