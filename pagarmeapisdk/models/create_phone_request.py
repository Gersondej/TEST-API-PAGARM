# -*- coding: utf-8 -*-

"""
pagarmeapisdk

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from pagarmeapisdk.api_helper import APIHelper


class CreatePhoneRequest(object):

    """Implementation of the 'CreatePhoneRequest' model.

    TODO: type model description here.

    Attributes:
        country_code (str): TODO: type description here.
        number (str): TODO: type description here.
        area_code (str): TODO: type description here.
        mtype (str): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "country_code": 'country_code',
        "number": 'number',
        "area_code": 'area_code',
        "mtype": 'Type'
    }

    _optionals = [
        'country_code',
        'number',
        'area_code',
        'mtype',
    ]

    _nullables = [
        'mtype',
    ]

    def __init__(self,
                 country_code=APIHelper.SKIP,
                 number=APIHelper.SKIP,
                 area_code=APIHelper.SKIP,
                 mtype=APIHelper.SKIP):
        """Constructor for the CreatePhoneRequest class"""

        # Initialize members of the class
        if country_code is not APIHelper.SKIP:
            self.country_code = country_code 
        if number is not APIHelper.SKIP:
            self.number = number 
        if area_code is not APIHelper.SKIP:
            self.area_code = area_code 
        if mtype is not APIHelper.SKIP:
            self.mtype = mtype 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        country_code = dictionary.get("country_code") if dictionary.get("country_code") else APIHelper.SKIP
        number = dictionary.get("number") if dictionary.get("number") else APIHelper.SKIP
        area_code = dictionary.get("area_code") if dictionary.get("area_code") else APIHelper.SKIP
        mtype = dictionary.get("Type") if "Type" in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(country_code,
                   number,
                   area_code,
                   mtype)
